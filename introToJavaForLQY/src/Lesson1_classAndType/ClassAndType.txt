Lesson 1

类 与 数据类型

I. 类与对象
    
      类 (Class): 在java中，所有的一切都在一个“类”里，这个特性可以说是java的特色。
              什么是类？
              一类就是一种东西。比如：水果，猫，人，电脑，动漫，国家，地球。。。
                                                  甚至更抽象一点：比如HelloWorld,Lesson1,等等。
                                                  只要你想，什么东西都可以被归为一类。
      对象 (Object): 属于为一个类里的参数赋予特殊的值，这样就构成了一个对象。
                                    换句话说一个对象就是一类中的一个个体。
                                    比如：如果有个类叫做anime（动漫）, 那么myHeroAcademia（我的英雄学院）
                                    就可以是该类的一个对象，theOutcast（一人之下）也可以是一个对象。
   
     为了更好的了解类和对象，我们首先必须知道数据类型。

II. 数据类型(Data Type)

   Type跟Class其实是一种东西的不同说法，比如一个对象属于anime类，那么这个对象的Type就是anime。
      也就是说它是可以人为创造的，厉害吧，在编程里你几乎什么都可以创造，你只需要告诉计算机它是什么组成的。
      然而，有些类型是不用你告诉计算机，它自己就知道，而你也不能修改的。
      叫做：原始类型(Primitive Type)
      
  !!!!!重点来了!!!!!
  
  1. java一共有8个原始类型：
        1. int         整数
        2. double      小数（先这么理解吧）
        3. boolean     布尔数（读作“布林”） 它的值只有两种：true / false
        4. char        字符（即 'a' 'B' '?' 等等）
        5. float       浮点数
        6. short       16位整数
        7. long        64位整数
        8. byte        一个字节（8位）
        
      我们重点了解 int，double，boolean 和  char。
   
      首先一些基本概念（这个要背，实在是不能变的有趣，不好意思）：
                 位数：这里指的是统统是二进制的位数。
                 比特：bit 二进制中的1位就是一个比特。
                 字节：8个bit等于一个byte。
   
      在java中      int占32位  double占64位   boolean占8位  char占16位
      
   2. 声明 (declare)
             我们创造一个新的东西，就叫做声明。
     
     
      比如：int x;   //声明一个叫x的int
        double a,b,c;  //声明三个double，分别叫a,b,c
   
      在java中，声明变量后，往往需要进行赋值， 我们使用=（等于号）进行赋值。
      ！！注意： =号的意思是“赋值”而不是“等于”，即把后面的值给前面。
   
      比如：int x = 0;  //声明一个叫x的int，赋值为0，这样的赋值是十进制的
        boolean isT = true; //声明一个叫isT的布尔数，赋值为真
        char c = 'A';  //我觉得你应该已经懂了^_^ 
        
      我们现在看这个：
         
        int x = 0;
        int y = 1;
        x = y;
        那么现在x的值是多少？ 答：1。因为y赋值给了x,所以x原来的值被覆盖了
    
        现在你可以打开lesson1Main.java 去完成TODO1。
    
    
   3. 字符串(String)
    
             除了原始类型，还有很多类型是计算机可以直接识别的，其中最重要（你应该了解）
             的是字符串。
      
      String其实就是一串的char, 你可以理解为一个词或者一句话。
      
      String word = "Deku";
      String sentence = "I am the best hero!";
      
            注意：赋值char用单引号'  '，String用双引号"  "。
            
            现在你可以去完成TODO2和TODO3.
   
   
   
         思考题: 
         
         int是否有最大值或者最小值？即int能否存无穷大的数？
         
         0.0的类型是什么？
         
         "A"的类型是什么？ 
         
                    如果我想用一个变量表达“我爱不爱你”这个意思，应该用什么类型？
         

附：我们可以随意命名一个对象。比如 int x; int orz; 都是可以的，但是注意：
        不能以数字开头。
        最好不要以* & 这些标点符号开头。
        反正都以字母开头最好。
        名字中间不能有空格。
        
        一些习惯：为了方面阅读代码，我们喜欢用更加语义化的命名方式。
                            比如，如果一个变量是你的答案，
             int answer; 或  int ans;
                           就比
             int x;
                           要好得多。因为如果你使用了后者，当你的变量多起来了以后，你
                           和可能会忘了x是什么，或者想使用这个数但是忘了它名字是什么。
                           但如果使用前者，你就能立刻想起来，answer就是我的答案。
       
       还有一些习惯：
                           当你需要用两个词来命名一个变量，比如有个数是你的 favorite number。
                           你可以用：
             
             int favoriteNumber;
                           或者
             int favorite_number;
             
             在java中我们一般习惯用前者。后者在C和C++中更常见。
      
      注意：java是区分大小写的，也就是lqy和LQY是不同的。


III.
      了解了基本的类型之后，我们可以更好的了解类了。              
      实例：打开quirk.java, 我们可以看到这里有一个叫quirk的类。（美国把“个性”翻译成了quirk）
      这里的Class下内容的意思是，一个quirk对象由两个String组成。这个是我们告诉电脑的。
      你可能发现，我们的数据类型前面多了一个public，这个的意思是公有，与其对应的是私有private
      两者的区别以后会有解释，现在你把所有东西都当做public就行。
      你可能又发现，这两个变量没有赋值，这是因为它们在描述这个类，而不是一个具体的对象。
      
      我们再打开hero.java， 这个类描述的是英雄。
  
   hero是由什么组成的？
   

结语：
      现在你已经知道类和类型是什么了，但是你还不能自由的操作这些类。
      在这之前，你还要学习运算符号，判断，循环，函数，以及更多的声明方法。
      这期间你可能会把编程当做一个计算器，但是你应该记住类的概念，所有这些判断循环啥的
      都是为了操作类做准备。
      因为只算数很无聊嘛。


思考题答案：
      
      有！因为int实际上32位二进制数，它的位数是有限的，所以不能存无限大（或小）的数。
   int的取值范围可以自行了解一下。你也可以思考一下一个int可以存多少种不同的数。
   
      是double或者float，反正不是int，因为有小数点。学化学的不需要我解释0和 0.0的区别了吧
   
      是String, 不是char, 看引号。
      
      其实都可以，但是我们最好用boolean, 用true来表示爱，false来表示不爱。
   
       