拆炸弹游戏

这个练习考验你阅读代码的能力
注：   推荐在完成所有Lesson后尝试这个练习
          你不应该修改任何代码。

I.简介
   
   在这个练习里有一个炸弹，这个炸弹一共有6个可触发的机关，每个机关都有对应的密码，
   只有输入正确的密码，炸弹才不会爆炸。
   你的任务是成功解除每一个机关。
   
   这个package里有三个类：
   Defuser.java  :  主类，包含一个main。你不需要仔细阅读这个类。
   Triggers.java  :  这个类包含了机关的详细信息。仔细阅读。
   Bomb.java    :   处理爆炸信息。你不需要阅读这个类。
   
II.开始拆弹
   
   点击运行。
   程序会在需要你的输入时停下来，等待你的输入。
   程序总共会依次向你索取6次输入。
   对于每次输入，你输入一个字符串，作为该机关的密码。
   程序会验证你每次的密码是否会导致炸弹爆炸。
   如果你输入的字符串导致了爆炸，你会看到BOOM!!!
   然后，程序将会终止。
   如果你看到了Congrats! 说明你成功拆除了炸弹。
   
III.如何拆弹

   世上的字符串千千万万，如何知道应该输入什么字符串？
   我们需要仔细阅读triggers类。
   
   在这个类里，包括了这样一些函数。它们长这样：
   
   public int triggerN(String str){
       ...
   }
   
   其中N是1,2,3,4,5,6
   
   这就是机关。
   
   每个机关有一个String作为参数，并且返还一个int
   
   这个String将会是你每次的输入。比如，你第一次输入了"liti"，程序便会
   以"liti"作为参数调用trigger1。第二次输入后调用trigger2，以此类推。
   
   每个trigger可能返还0，也可能返还-1，它返还什么值取决于你输入的字符串。
   你的目标是令它返还0。
   换句话说，你应该尝试通过输入正确的字符串来避免trigger调用bomb.explode();
   
   那如何防止程序走到bomb.explode()呢？这你就需要仔细阅读每个trigger里的代码，
   然后分析在str是什么的情况下，炸弹不会爆炸了。
   
IV.提示  
   
   1.你需要阅读的代码均在Trigger.java内
   
   2.由于缺少批注，以及涉及一些超纲内容，
          你可能无法完全理解每行代码的意思。没关系，通过变量名和函数名，
          猜猜它们是干嘛的。
          
   3.trigger1~4涉及比较基础的内容。
     
     trigger5涉及一个简单的递归，如果遇到困难，建议先看看recursion那一课。
     
     trigger6涉及Math.random()，可以生成一个随机数。
          如果你还不知道它是怎么运作的，没关系，这个数随机出来是多少在这个机关里没什么关系，是用来误导你的，
          事实上，为了解决trigger6，你可能需要了解一些关于斐波那契数列的知识。     
   


   